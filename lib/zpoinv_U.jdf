extern "C" %{
/*
 * Copyright (c) 2010-2013 The University of Tennessee and The University
 *                         of Tennessee Research Foundation. All rights
 *                         reserved.
 * Copyright (c) 2013      Inria. All rights reserved.
 * $COPYRIGHT
 *
 *
 * @precisions normal z -> s d c
 *
 * This jdf performs the following operations : potrf + trtri + lauum
 * and NOT ONLY trtri + lauum as its name would indicate.
 *
 */
#include "dplasmajdf.h"
#include "data_dist/matrix/matrix.h"

%}

uplo      [type = "PLASMA_enum"]
dataA     [type = "dague_ddesc_t *"]
descA     [type = "tiled_matrix_desc_t" hidden = on default = "*((tiled_matrix_desc_t*)dataA)"]


DAGUE_IN_A(m, n)
  /* Execution Space */
  m = 0 .. (descA.nt-1)
  n = m .. (descA.nt-1)

  /* Locality */
  : dataA(m,n)

  RW    A    <- dataA(m,n)
             -> ((0==m) & (n>=1)) ? B potrf_ztrsm(0, n)
             -> ((0==n) & (0==m)) ? A potrf_zpotrf(0)
             -> ((n>=(m+1)) & (m>=1)) ? C potrf_zgemm(0, n, m)
             -> ((n==m) & (n>=1)) ? B potrf_zherk(0, n)

BODY
{
    /* nothing */
}
END

potrf_zpotrf(k)
  /* Execution Space */
  k = 0..(descA.nt-1)

  /* Locality */
  : dataA(k,k)

  RW    A    <- ((k>=1)) ? B potrf_zherk(k-1, k)
             <- ((0==k)) ? A DAGUE_IN_A(0, 0)
             -> ((k>=1)) ? A trtri_ztrsmR(k, 0..(k-1))
             -> A trtri_ztrtri(k)
             -> ((descA.nt>=(2+k))) ? A trtri_ztrsmL(k, (k+1)..(descA.nt-1))
             -> ((descA.nt>=(k+2))) ? A potrf_ztrsm(k, (k+1)..(descA.nt-1))

BODY
{
    int tempkm = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );
    int info = 0;

    printlog("CORE_potrf_zpotrf(%d)\n"
             "\t(PlasmaUpper, tempkm, A(%d,%d)[%p], ldak, descA.nb*k)\n",
             k, k, k, A);
#if !defined(DAGUE_DRY_RUN)
    CORE_zpotrf(PlasmaUpper, tempkm,
                A /* dataA(k,k) */, ldak, &info );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

potrf_ztrsm(k, m)
  /* Execution Space */
  k = 0..(descA.nt-2)
  m = (k+1)..(descA.nt-1)

  /* Locality */
  : dataA(k,m)

  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- ((k>=1)) ? C potrf_zgemm(k-1, m, k)
             <- ((0==k)) ? A DAGUE_IN_A(0, m)
             -> ((m>=(k+2))) ? B potrf_zgemm(k, m, (k+1)..(m-1))
             -> B trtri_ztrsmL(k, m)
             -> A potrf_zherk(k, m)
             -> ((descA.nt>=(m+2))) ? A potrf_zgemm(k, (m+1)..(descA.nt-1), m)

BODY
{
    int tempmm = ((m)==(descA.nt-1)) ? (descA.n-(m*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );

    printlog("CORE_potrf_ztrsm(%d, %d)\n"
             "\t(PlasmaLeft, PlasmaUpper, PlasmaConjTrans, PlasmaNonUnit, descA.nb, tempmm, 1.000000, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak)\n",
             k, m, k, k, A, k, m, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrsm(PlasmaLeft, PlasmaUpper, PlasmaConjTrans,
               PlasmaNonUnit, descA.nb, tempmm,
               1.000000, A /* dataA(k,k) */, ldak,
               B /* dataA(k,m) */, ldak );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

potrf_zherk(k, m)
  /* Execution Space */
  k = 0..(descA.nt-2)
  m = (k+1)..(descA.nt-1)

  /* Locality */
  : dataA(m,m)

  CTL   ctl0 -> ctl0 trtri_ztrsmL(k, m)
  READ  A    <- B potrf_ztrsm(k, m)
  RW    B    <- ((k>=1)) ? B potrf_zherk(k-1, m)
             <- ((0==k)) ? A DAGUE_IN_A(m, m)
             -> (((1+k)==m)) ? A potrf_zpotrf(m)
             -> ((m>=(k+2))) ? B potrf_zherk(k+1, m)

BODY
{
    int tempmm = ((m)==(descA.nt-1)) ? (descA.n-(m*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );

    printlog("CORE_potrf_zherk(%d, %d)\n"
             "\t(PlasmaUpper, PlasmaConjTrans, tempmm, descA.mb, -1.000000, A(%d,%d)[%p], ldak, 1.000000, A(%d,%d)[%p], ldam)\n",
             k, m, k, m, A, m, m, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_zherk(PlasmaUpper, PlasmaConjTrans, tempmm,
               descA.mb, -1.000000, A /* dataA(k,m) */,
               ldak, 1.000000, B /* dataA(m,m) */,
               ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

potrf_zgemm(k, m, n)
  /* Execution Space */
  k = 0..(descA.nt-2)
  m = (k+2)..(descA.nt-1)
  n = (k+1)..(m-1)

  /* Locality */
  : dataA(n,m)

  CTL   ctl2 -> ctl2 trtri_ztrsmL(k, n)
  CTL   ctl1 -> ctl1 trtri_ztrsmL(k, m)
  READ  A    <- B potrf_ztrsm(k, n)
  READ  B    <- B potrf_ztrsm(k, m)
  RW    C    <- ((k>=1)) ? C potrf_zgemm(k-1, m, n)
             <- ((0==k)) ? A DAGUE_IN_A(n, m)
             -> ((n>=(k+2))) ? C potrf_zgemm(k+1, m, n)
             -> (((k+1)==n)) ? B potrf_ztrsm(n, m)

BODY
{
    int tempmm = ((m)==(descA.nt-1)) ? (descA.n-(m*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );

    printlog("CORE_potrf_zgemm(%d, %d, %d)\n"
             "\t(PlasmaConjTrans, PlasmaNoTrans, descA.mb, tempmm, descA.mb, -1, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak, 1.000000, A(%d,%d)[%p], descA.mb)\n",
             k, m, n, k, n, A, k, m, B, n, m, C);
#if !defined(DAGUE_DRY_RUN)

    CORE_zgemm(PlasmaConjTrans, PlasmaNoTrans, descA.mb,
               tempmm, descA.mb, -1,
               A /* dataA(k,n) */, ldak, B /* dataA(k,m) */,
               ldak, 1.000000, C /* dataA(n,m) */,
               descA.mb );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

trtri_ztrsmL(k, n)
  /* Execution Space */
  k = 0..(descA.nt-2)
  n = (k+1)..(descA.nt-1)

  /* Locality */
  : dataA(k,n)

  CTL   ctl3 -> ((0==k)) ? ctl3 trtri_ztrtri(0)
  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- B potrf_ztrsm(k, n)
             -> ((n>=(2+k))) ? C trtri_zgemm(k+1, k, n)
             -> (((1+k)==n)) ? B trtri_ztrsmR(n, n-1)
             -> ((k>=1)) ? B trtri_zgemm(k, 0..(k-1), n)
             -> (((k+1)==n) & (descA.nt>=(k+3))) ? A trtri_zgemm(n, n-1, (n+1)..(descA.nt-1))
  CTL   ctl2 <- ((descA.nt>=(n+2))) ? ctl2 potrf_zgemm(k, (n+1)..(descA.nt-1), n)
  CTL   ctl1 <- ((n>=(k+2))) ? ctl1 potrf_zgemm(k, n, (k+1)..(n-1))
  CTL   ctl0 <- ctl0 potrf_zherk(k, n)

BODY
{
    int tempkm = ((k)==(descA.mt-1)) ? (descA.m-(k*descA.mb)) : descA.mb;
    int tempnn = ((n)==(descA.nt-1)) ? (descA.n-(n*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );

    printlog("CORE_trtri_ztrsmL(%d, %d)\n"
             "\t(PlasmaLeft, uplo, PlasmaNoTrans, PlasmaNonUnit, tempkm, tempnn, -1, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldak)\n",
             k, n, k, k, A, k, n, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrsm(PlasmaLeft, uplo, PlasmaNoTrans,
               PlasmaNonUnit, tempkm, tempnn,
               -1, A /* dataA(k,k) */, ldak,
               B /* dataA(k,n) */, ldak );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

trtri_zgemm(k, m, n)
  /* Execution Space */
  k = (1)..(descA.nt-2)
  m = 0..(k-1)
  n = (k+1)..(descA.nt-1)

  /* Locality */
  : dataA(m,n)

  CTL   ctl6 -> ctl6 trtri_ztrsmR(k, m)
  CTL   ctl5 -> (((k+1)==n)) ? ctl5 trtri_ztrsmR(n, n-1)
  CTL   ctl4 -> ((n>=(k+2))) ? ctl4 trtri_zgemm((k+1)..(n-1), k, n)
             <- ((m>=1)) ? ctl4 trtri_zgemm(m, 0..(m-1), n)
  READ  A    <- ((k==(1+m))) ? B trtri_ztrsmL(m+1-1, m+1)
             <- ((k>=(2+m))) ? C trtri_zgemm(k-1, m, k)
  READ  B    <- B trtri_ztrsmL(k, n)
  RW    C    <- ((k>=(m+2))) ? C trtri_zgemm(k-1, m, n)
             <- ((k==(m+1))) ? B trtri_ztrsmL(k-1, n)
             -> ((n>=(k+2))) ? C trtri_zgemm(k+1, m, n)
             -> (((k+1)==n)) ? B trtri_ztrsmR(n, m)
             -> (((k+1)==n) & (descA.nt>=(3+k))) ? A trtri_zgemm(n, m, (n+1)..(descA.nt-1))

BODY
{
    int tempnn = ((n)==(descA.nt-1)) ? (descA.n-(n*descA.nb)) : descA.nb;
    int tempkm = ((k)==(descA.mt-1)) ? (descA.m-(k*descA.mb)) : descA.mb;
    int ldam = BLKLDD( descA, m );
    int ldak = BLKLDD( descA, k );

    printlog("CORE_trtri_zgemm(%d, %d, %d)\n"
             "\t(PlasmaNoTrans, PlasmaNoTrans, descA.mb, tempnn, tempkm, 1.000000, A(%d,%d)[%p], ldam, A(%d,%d)[%p], ldak, 1.000000, A(%d,%d)[%p], ldam)\n",
             k, m, n, m, k, A, k, n, B, m, n, C);
#if !defined(DAGUE_DRY_RUN)

    CORE_zgemm(PlasmaNoTrans, PlasmaNoTrans, descA.mb,
               tempnn, tempkm, 1.000000,
               A /* dataA(m,k) */, ldam, B /* dataA(k,n) */,
               ldak, 1.000000, C /* dataA(m,n) */,
               ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

trtri_ztrsmR(k, m)
  /* Execution Space */
  k = (1)..(descA.mt-1)
  m = 0..(k-1)

  /* Locality */
  : dataA(m,k)

  CTL   ctl7 -> ctl7 trtri_ztrtri(k)
  READ  A    <- A potrf_zpotrf(k)
  RW    B    <- ((k>=(m+2))) ? C trtri_zgemm(k-1, m, k)
             <- (((m+1)==k)) ? B trtri_ztrsmL(k-1, m+1)
             -> ((k>=(m+2))) ? A lauum_zgemm(k, m, (m+1)..(k-1))
             -> ((m>=1)) ? B lauum_zgemm(k, 0..(m-1), m)
             -> B lauum_ztrmm(k, m)
             -> A lauum_zherk(k, m)
  CTL   ctl6 <- ((descA.nt>=(k+2))) ? ctl6 trtri_zgemm(k, m, (k+1)..(descA.nt-1))
  CTL   ctl5 <- (((m+1)==k) & (m>=1)) ? ctl5 trtri_zgemm(m+1-1, 0..(m+1-2), m+1)

BODY
{
    int tempkm = ((k)==(descA.mt-1)) ? (descA.m-(k*descA.mb)) : descA.mb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );

    printlog("CORE_trtri_ztrsmR(%d, %d)\n"
             "\t(PlasmaRight, uplo, PlasmaNoTrans, PlasmaNonUnit, descA.mb, tempkm, 1.000000, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldam)\n",
             k, m, k, k, A, m, k, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrsm(PlasmaRight, uplo, PlasmaNoTrans,
               PlasmaNonUnit, descA.mb, tempkm,
               1.000000, A /* dataA(k,k) */, ldak,
               B /* dataA(m,k) */, ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

trtri_ztrtri(k)
  /* Execution Space */
  k = 0..(descA.mt-1)

  /* Locality */
  : dataA(k,k)

  RW    A    <- A potrf_zpotrf(k)
             -> ((k>=1)) ? A lauum_ztrmm(k, 0..(k-1))
             -> A lauum_zlauum(k)
  CTL   ctl7 <- ((k>=1)) ? ctl7 trtri_ztrsmR(k, 0..(k-1))
  CTL   ctl3 <- ((0==k) & (descA.nt>=2)) ? ctl3 trtri_ztrsmL(0, (1)..(descA.nt-1))

BODY
{
    int tempkm = ((k)==(descA.mt-1)) ? (descA.m-(k*descA.mb)) : descA.mb;
    int ldak = BLKLDD( descA, k );
    int info = 0;

    printlog("CORE_trtri_ztrtri(%d)\n"
             "\t(uplo, PlasmaNonUnit, tempkm, A(%d,%d)[%p], ldak, descA.mb*k)\n",
             k, k, k, A);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrtri(uplo, PlasmaNonUnit, tempkm,
                A /* dataA(k,k) */, ldak, &info );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

lauum_zherk(k, m)
  /* Execution Space */
  k = (1)..(descA.mt-1)
  m = 0..(k-1)

  /* Locality */
  : dataA(m,m)

  CTL   ctl8 -> ctl8 lauum_ztrmm(k, m)
  READ  A    <- B trtri_ztrsmR(k, m)
  RW    B    <- ((k>=(m+2))) ? B lauum_zherk(k-1, m)
             <- (((m+1)==k)) ? A lauum_zlauum(m)
             -> ((descA.mt>=(k+2))) ? B lauum_zherk(k+1, m)
             -> ((descA.mt==(k+1)) & (descA.mt==descA.nt)) ? A DAGUE_OUT_A(m, m)

BODY
{
    int tempkn = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
    int ldam = BLKLDD( descA, m );

    printlog("CORE_lauum_zherk(%d, %d)\n"
             "\t(uplo, PlasmaNoTrans, descA.mb, tempkn, 1.000000, A(%d,%d)[%p], ldam, 1.000000, A(%d,%d)[%p], ldam)\n",
             k, m, m, k, A, m, m, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_zherk(uplo, PlasmaNoTrans, descA.mb,
               tempkn, 1.000000, A /* dataA(m,k) */,
               ldam, 1.000000, B /* dataA(m,m) */,
               ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

lauum_zgemm(k, m, n)
  /* Execution Space */
  k = (1)..(descA.mt-1)
  m = 0..(k-2)
  n = (m+1)..(k-1)

  /* Locality */
  : dataA(m,n)

  CTL   ctl10 -> ctl10 lauum_ztrmm(k, m)
  CTL   ctl9 -> ctl9 lauum_ztrmm(k, n)
  READ  A    <- B trtri_ztrsmR(k, m)
  READ  B    <- B trtri_ztrsmR(k, n)
  RW    C    <- ((k==(n+1))) ? B lauum_ztrmm(n, m)
             <- ((k>=(n+2))) ? C lauum_zgemm(k-1, m, n)
             -> ((descA.nt==(k+1)) & (descA.nt==descA.mt)) ? A DAGUE_OUT_A(m, n)
             -> ((descA.mt>=(2+k))) ? C lauum_zgemm(k+1, m, n)

BODY
{
    int tempkn = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
    int ldam = BLKLDD( descA, m );
    int ldan = BLKLDD( descA, n );

    printlog("CORE_lauum_zgemm(%d, %d, %d)\n"
             "\t(PlasmaNoTrans, PlasmaConjTrans, descA.mb, descA.nb, tempkn, 1.000000, A(%d,%d)[%p], ldam, A(%d,%d)[%p], ldan, 1.000000, A(%d,%d)[%p], ldam)\n",
             k, m, n, m, k, A, n, k, B, m, n, C);
#if !defined(DAGUE_DRY_RUN)

    CORE_zgemm(PlasmaNoTrans, PlasmaConjTrans, descA.mb,
               descA.nb, tempkn, 1.000000,
               A /* dataA(m,k) */, ldam, B /* dataA(n,k) */,
               ldan, 1.000000, C /* dataA(m,n) */,
               ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

lauum_ztrmm(k, m)
  /* Execution Space */
  k = (1)..(descA.mt-1)
  m = 0..(k-1)

  /* Locality */
  : dataA(m,k)

  CTL   ctl11 -> ctl11 lauum_zlauum(k)
  READ  A    <- A trtri_ztrtri(k)
  RW    B    <- B trtri_ztrsmR(k, m)
             -> ((descA.mt>=(k+2))) ? C lauum_zgemm(k+1, m, k)
             -> ((descA.mt==(k+1)) & (descA.mt==descA.nt)) ? A DAGUE_OUT_A(m, k)
  CTL   ctl10 <- ((k>=(m+2))) ? ctl10 lauum_zgemm(k, m, (m+1)..(k-1))
  CTL   ctl9 <- ((m>=1)) ? ctl9 lauum_zgemm(k, 0..(m-1), m)
  CTL   ctl8 <- ctl8 lauum_zherk(k, m)

BODY
{
    int tempkn = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );
    int ldam = BLKLDD( descA, m );

    printlog("CORE_lauum_ztrmm(%d, %d)\n"
             "\t(PlasmaRight, uplo, PlasmaConjTrans, PlasmaNonUnit, descA.mb, tempkn, 1.000000, A(%d,%d)[%p], ldak, A(%d,%d)[%p], ldam)\n",
             k, m, k, k, A, m, k, B);
#if !defined(DAGUE_DRY_RUN)

    CORE_ztrmm(PlasmaRight, uplo, PlasmaConjTrans,
               PlasmaNonUnit, descA.mb, tempkn,
               1.000000, A /* dataA(k,k) */, ldak,
               B /* dataA(m,k) */, ldam );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

lauum_zlauum(k)
  /* Execution Space */
  k = 0..(descA.mt-1)

  /* Locality */
  : dataA(k,k)

  RW    A    <- A trtri_ztrtri(k)
             -> ((descA.mt>=(k+2))) ? B lauum_zherk(k+1, k)
             -> ((descA.nt==(k+1)) & (descA.nt==descA.mt)) ? A DAGUE_OUT_A(k, k)
  CTL   ctl11 <- ((k>=1)) ? ctl11 lauum_ztrmm(k, 0..(k-1))

BODY
{
    int tempkn = ((k)==(descA.nt-1)) ? (descA.n-(k*descA.nb)) : descA.nb;
    int ldak = BLKLDD( descA, k );

    printlog("CORE_lauum_zlauum(%d)\n"
             "\t(uplo, tempkn, A(%d,%d)[%p], ldak)\n",
             k, k, k, A);
#if !defined(DAGUE_DRY_RUN)

    CORE_zlauum(uplo, tempkn, A /* dataA(k,k) */,
                ldak );
#endif  /* !defined(DAGUE_DRY_RUN) */

}
END

DAGUE_OUT_A(m, n)
  /* Execution Space */
  m = 0 .. (descA.nt-1)
  n = m .. (descA.nt-1)

  /* Locality */
  : dataA(m,n)

  RW    A    <- ((descA.nt>=(n+2)) & (n>=(m+1))) ? C lauum_zgemm(descA.mt-1, m, n)
             <- ((descA.mt==(n+1)) & (descA.mt>=(m+2))) ? B lauum_ztrmm(descA.mt-1, m)
             <- (((m+1)==descA.mt) & (m==n)) ? A lauum_zlauum(n)
             <- ((n==m) & (descA.mt>=(n+2))) ? B lauum_zherk(descA.mt-1, m)
             -> dataA(m,n)

BODY
{
    /* nothing */
}
END
